# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import grpcModels_pb2 as grpcModels__pb2


class LoginServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateUser = channel.unary_unary(
                '/LoginService/CreateUser',
                request_serializer=grpcModels__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=grpcModels__pb2.MessageResponse.FromString,
                )
        self.Login = channel.unary_unary(
                '/LoginService/Login',
                request_serializer=grpcModels__pb2.LoginRequest.SerializeToString,
                response_deserializer=grpcModels__pb2.MessageResponse.FromString,
                )


class LoginServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LoginServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=grpcModels__pb2.CreateUserRequest.FromString,
                    response_serializer=grpcModels__pb2.MessageResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=grpcModels__pb2.LoginRequest.FromString,
                    response_serializer=grpcModels__pb2.MessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'LoginService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LoginService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LoginService/CreateUser',
            grpcModels__pb2.CreateUserRequest.SerializeToString,
            grpcModels__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LoginService/Login',
            grpcModels__pb2.LoginRequest.SerializeToString,
            grpcModels__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ProductServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateProduct = channel.unary_unary(
                '/ProductService/CreateProduct',
                request_serializer=grpcModels__pb2.Product.SerializeToString,
                response_deserializer=grpcModels__pb2.MessageResponse.FromString,
                )
        self.UpdateProduct = channel.unary_unary(
                '/ProductService/UpdateProduct',
                request_serializer=grpcModels__pb2.Product.SerializeToString,
                response_deserializer=grpcModels__pb2.MessageResponse.FromString,
                )
        self.RemoveProduct = channel.unary_unary(
                '/ProductService/RemoveProduct',
                request_serializer=grpcModels__pb2.RemoveProductRequest.SerializeToString,
                response_deserializer=grpcModels__pb2.MessageResponse.FromString,
                )


class ProductServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProduct,
                    request_deserializer=grpcModels__pb2.Product.FromString,
                    response_serializer=grpcModels__pb2.MessageResponse.SerializeToString,
            ),
            'UpdateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProduct,
                    request_deserializer=grpcModels__pb2.Product.FromString,
                    response_serializer=grpcModels__pb2.MessageResponse.SerializeToString,
            ),
            'RemoveProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveProduct,
                    request_deserializer=grpcModels__pb2.RemoveProductRequest.FromString,
                    response_serializer=grpcModels__pb2.MessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ProductService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProductService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductService/CreateProduct',
            grpcModels__pb2.Product.SerializeToString,
            grpcModels__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductService/UpdateProduct',
            grpcModels__pb2.Product.SerializeToString,
            grpcModels__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProductService/RemoveProduct',
            grpcModels__pb2.RemoveProductRequest.SerializeToString,
            grpcModels__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ReportServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStock = channel.unary_unary(
                '/ReportService/GetStock',
                request_serializer=grpcModels__pb2.Empty.SerializeToString,
                response_deserializer=grpcModels__pb2.ReportResponse.FromString,
                )
        self.GetProductWithoutStock = channel.unary_unary(
                '/ReportService/GetProductWithoutStock',
                request_serializer=grpcModels__pb2.ReportRequest.SerializeToString,
                response_deserializer=grpcModels__pb2.ReportResponse.FromString,
                )
        self.GetProductWithoutOut = channel.unary_unary(
                '/ReportService/GetProductWithoutOut',
                request_serializer=grpcModels__pb2.ReportRequest.SerializeToString,
                response_deserializer=grpcModels__pb2.ReportResponse.FromString,
                )


class ReportServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductWithoutStock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductWithoutOut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReportServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStock,
                    request_deserializer=grpcModels__pb2.Empty.FromString,
                    response_serializer=grpcModels__pb2.ReportResponse.SerializeToString,
            ),
            'GetProductWithoutStock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductWithoutStock,
                    request_deserializer=grpcModels__pb2.ReportRequest.FromString,
                    response_serializer=grpcModels__pb2.ReportResponse.SerializeToString,
            ),
            'GetProductWithoutOut': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductWithoutOut,
                    request_deserializer=grpcModels__pb2.ReportRequest.FromString,
                    response_serializer=grpcModels__pb2.ReportResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ReportService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ReportService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ReportService/GetStock',
            grpcModels__pb2.Empty.SerializeToString,
            grpcModels__pb2.ReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductWithoutStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ReportService/GetProductWithoutStock',
            grpcModels__pb2.ReportRequest.SerializeToString,
            grpcModels__pb2.ReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductWithoutOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ReportService/GetProductWithoutOut',
            grpcModels__pb2.ReportRequest.SerializeToString,
            grpcModels__pb2.ReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
